{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handelChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"gOAIMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,qCACA,8CAIVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BAAI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAHGA,MAQb,OAAO,gCAAQJ,KAaNS,EAXF,SAACV,GAAU,IAETE,EAAgCF,EAAhCE,cAAeO,EAAiBT,EAAjBS,gBACtB,OACA,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCCvDE,E,4MA9BXC,aAAe,CACXN,KAAK,GACLC,IAAI,I,EAERM,MAAO,EAAKD,a,EAEZE,aAAc,SAACC,GAAU,IAAD,EACEA,EAAMC,OAArBV,EADa,EACbA,KAAMW,EADO,EACPA,MACb,EAAKC,SAAL,eAAgBZ,EAAMW,K,EAE1BE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAEvB,WAAS,IAAD,EACaS,KAAKR,MAAfP,EADH,EACGA,KAAKC,EADR,EACQA,IACZ,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOP,MAAOX,EAAMmB,SAAUJ,KAAKP,eACrE,uBAAOQ,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMP,MAAOV,EAAKkB,SAAUJ,KAAKP,eAClE,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GAvB/CO,aC+BJC,E,4MA3BXlB,gBAAkB,SAACJ,GAAW,IAClBuB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACVU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM1B,Q,EAIzBe,aAAe,SAACU,GACZ,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA4BE,O,EAEzDjB,MAAQ,CACJe,WAAY,I,4CAEhB,WAAU,IACEA,EAAeP,KAAKR,MAApBe,WACR,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAOW,aAAgBC,KAAKD,sB,GArB1BM,aCClBO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.24736165.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thead>)\r\n}\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{row.name}</td>\r\n            <td>{row.job}</td>\r\n            <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\r\n          </tr>\r\n        )\r\n      })\r\n    \r\n      return <tbody>{rows}</tbody>\r\n}\r\nconst Table =(props)=> {\r\n    \r\n        const {characterData, removeCharacter}=props\r\n        return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n        </table>)\r\n    \r\n}\r\n\r\nexport default Table","import React,{Component} from 'react';\r\n\r\n\r\nclass Form extends Component{\r\n    initialState = {\r\n        name:'',\r\n        job:'',\r\n    }\r\n    state= this.initialState;\r\n\r\n    handelChange= (event) =>{\r\n        const {name, value} = event.target\r\n        this.setState({[name]:value,})\r\n    }\r\n    submitForm = () =>{\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n    render(){\r\n        const {name,job}=this.state;\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handelChange} />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handelChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}></input>\r\n            </form>\r\n        )\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Form;","\r\nimport React, { Component } from 'react'\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\n\r\nclass App extends Component {\r\n    removeCharacter = (index) => {\r\n        const { characters } = this.state\r\n\r\n        this.setState({\r\n            characters: characters.filter((character, i) => {\r\n                return i !== index\r\n            }),\r\n        })\r\n    }\r\n    handleSubmit = (character) =>{\r\n        this.setState({characters: [...this.state.characters,character]})\r\n    }\r\n    state = {\r\n        characters: []\r\n    }\r\n    render() {\r\n        const { characters } = this.state\r\n        return (\r\n            <div className=\"container\">\r\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n                <Form  handleSubmit = {this.handleSubmit}/>\r\n            </div>);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}